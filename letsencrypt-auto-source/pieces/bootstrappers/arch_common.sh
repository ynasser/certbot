BootstrapArchCommon() {
  # Tested with:
  #   - ArchLinux (x86_64)
  #
  # "python-virtualenv" is Python3, but "python2-virtualenv" provides
  # only "virtualenv2" binary, not "virtualenv" necessary in
  # ./tools/_venv_common.sh

  deps="
    python2
    python-virtualenv
    gcc
    augeas
    openssl
    libffi
    ca-certificates
    pkg-config
  "

  if [ ! -z $configure_cron ]; then
    deps="$deps
        cronie
    "
  fi

  # pacman -T exits with 127 if there are missing dependencies
  missing=$($SUDO pacman -T $deps) || true

  if [ "$ASSUME_YES" = 1 ]; then
    noconfirm="--noconfirm"
  fi

  if [ "$missing" ]; then
    if [ "$QUIET" = 1]; then
      $SUDO pacman -S --needed $missing $noconfirm > /dev/null
    else
      $SUDO pacman -S --needed $missing $noconfirm
    fi
  fi
}

ConfigureCronArch() {
  if [ ! -z "$configure_cron" ]; then
    root_crontab=/var/spool/cron/crontabs/root
    pkg_crontab=/etc/cron.d/certbot

    if [ $SUDO -f "$root_crontab" ]; then
      # only grep if it exists
      cerbot_cron_exists=$($SUDO grep "certbot -q renew # generated by certbot" $root_crontab)
    fi

    if [ -z "$cerbot_cron_exists" ]; then
      random_wait=`awk -v max=3600 'BEGIN{srand(); print int(rand()*(max))}'`
      crontab_text="0 */12 * * * sleep random_wait ; certbot -q renew # generated by certbot\n"
      crontab_text=`echo "$crontab_text" | sed s/random_wait/$random_wait/g`
      tmp_cron_file=`mktemp`
      echo "$crontab_text" > $tmp_cron_file
      $SUDO crontab $tmp_cron_file
      rm $tmp_cron_file
      $SUDO service crond start
    else
      echo "Not adding a renewal cron job for certbot, as one already exists."
    fi
  fi
}
