BootstrapSuseCommon() {
  # SLE12 don't have python-virtualenv

  if [ "$ASSUME_YES" = 1 ]; then
    zypper_flags="-nq"
    install_flags="-l"
  fi

  if [ "$QUIET" = 1 ]; then
    QUIET_FLAG='-qq'
  fi

  if [ ! -z $configure_cron ]; then
    # on newer versions of openSuSe, this package actually installs cronie
    cron="cron"
  fi

  $SUDO zypper $QUIET_FLAG $zypper_flags in $install_flags \
    python \
    python-devel \
    python-virtualenv \
    gcc \
    augeas-lenses \
    libopenssl-devel \
    libffi-devel \
    ca-certificates \
    $cron
}

ConfigureCronSuse(){
  if [ ! -z "$configure_cron" ]; then
    # TODO: figure out how to read zypper output to check if certbot is installed ...

    # when a normal user creates a crontab via `sudo`, it gets added to the root crontab
    root_crontab_dir="/var/spool/cron/tabs/root"

    if [ $SUDO -d "$root_crontab_dir" ]; then
      # only grep if it exists
      cerbot_cron_exists=$($SUDO grep "certbot -q renew # generated by certbot" $root_crontab_dir)
    fi

    if [ -z "$cerbot_cron_exists" ]; then
      random_wait=`awk -v max=3600 'BEGIN{srand(); print int(rand()*(max))}'`
      crontab_text="0 */12 * * * sleep random_wait ; certbot -q renew # generated by certbot\n"
      crontab_text=`echo "$crontab_text" | sed s/random_wait/$random_wait/g`
      tmp_cron_file=`mktemp`
      echo "$crontab_text" > $tmp_cron_file
      $SUDO crontab $tmp_cron_file
      rm $tmp_cron_file
      $SUDO service crond start
    else
      echo "Not adding a renewal cron job for certbot, as one already exists."
    fi
  fi
}
